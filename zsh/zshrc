export ICONFIG_FLAG=1

export EDITOR="nvim"
alias vim='nvim'

# vi mode
bindkey -v
# this makes the switch between modes quicker
export KEYTIMEOUT=1
export LESSCHARSET=utf-8

# envs
# personal binariebash <(curl -L https://zellij.dev/launchbash <(curl -L https://zellij.dev/launch))s
export PATH="${HOME}/.local/bin:${PATH}"
# LOCAL, DEV, PROD
export DEVELOPMENT_ENV=LOCAL

# homebrew
HOMEBREW_ROOT="/home/linuxbrew/.linuxbrew"
if [[ -e "$HOMEBREW_ROOT" ]]; then
  eval "$($HOMEBREW_ROOT/bin/brew shellenv)"
fi
BREW_BISON=/opt/homebrew/opt/bison
if [[ -e "$BREW_BISON" ]]; then
  export PATH="$BREW_BISON/bin:$PATH"
  export LDFLAGS="-L$BREW_BISON/lib"
fi
BREW_FLEX=/opt/homebrew/opt/flex
if [[ -e "$BREW_FLEX" ]]; then
  export PATH="$BREW_FLEX/bin:$PATH"
  export LDFLAGS="-L$BREW_FLEX/lib"
  export CPPFLAGS="-I$BREW_FLEX/include"
fi


# using startship as alternative
#export Z10K_CONFIG=~/.config/zsh/p10k.zsh
#[[ ! -f $Z10K_CONFIG ]] || source $Z10K_CONFIG

# cargo
export CARGE_ENV="$HOME/.cargo/env"
[[ -e ${CARGE_ENV} ]] && source ${CARGE_ENV}

# starship
command -v starship >/dev/null && eval "$(starship init zsh)"

# vcpkg root
DEFAULT_VCPKG_ROOT=$HOME/.local/vcpkg
if [[ "$VCPKG_ROOT" == "" && -e ${DEFAULT_VCPKG_ROOT} ]]; then
  export VCPKG_ROOT=${DEFAULT_VCPKG_ROOT}
  export PATH="$DEFAULT_VCPKG_ROOT:$PATH"
fi

# nvm
DFT_NVM_DIR="$HOME/.nvm"
if [[ "$NVM_DIR" == "" && -e "$DFT_NVM_DIR" ]]; then
  export NVM_DIR="$DFT_NVM_DIR"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# kitty
if command -v kitty >/dev/null; then 
  alias kssh="kitty +kitten ssh"
fi

function fix_asdf_plugin_path() {
  local t_plugin=$1
  if asdf current ${t_plugin}>/dev/null; then
    local t_plugin_version=$(asdf current python | grep python | awk '{print$2}')
    export PATH="${ASDF_DATA_DIR}/installs/${t_plugin}/${t_plugin_version}/bin:$PATH"
  fi
}

# asdf
if command -v asdf >/dev/null; then
  export ASDF_DATA_DIR="${ASDF_DATA_DIR:-$HOME/.asdf}"
  export PATH="${ASDF_DATA_DIR}/shims:$PATH"
  # fix python binraries
  fix_asdf_plugin_path python
fi

# env init
ENV_INIT_DIR="$HOME/.local/env-init/env"
if [[ -e "$ENV_INIT_DIR" ]]; then
  source "$ENV_INIT_DIR"
  alias ienv="source $ENV_INIT_DIR" 
fi
